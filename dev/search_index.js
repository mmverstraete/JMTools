var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = JMTools","category":"page"},{"location":"#JMTools-Package-Documentation","page":"Home","title":"JMTools Package Documentation","text":"","category":"section"},{"location":"#Index-of-functions","page":"Home","title":"Index of functions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Main-module","page":"Home","title":"Main module","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"JMTools","category":"page"},{"location":"#JMTools.JMTools","page":"Home","title":"JMTools.JMTools","text":"using JMTools\n\nPurpose:\n\nProvide access to MISR Tools functions.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia function: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJMtk15 package: Version 0.1.0 (2023-02-15).\nJulia function: Version 0.1.0 (2023-05-15).\n\nNote(s): N/A.\n\nExample:\n\njulia> using JMTools\n[ Info: Precompiling JMTools [7ad2ddfe-0423-4906-9772-0d2d9ace2845]\n\n\n\n\n\n","category":"module"},{"location":"#Functions","page":"Home","title":"Functions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"current_misr_prdct_version\nis_valid_misr_block\nis_valid_misr_camera\nis_valid_misr_orbit\nis_valid_misr_path\nis_valid_misr_prdct\nis_valid_misr_site\nis_valid_misrhr_prdct\nmk_misr_fname","category":"page"},{"location":"#JMTools.current_misr_prdct_version","page":"Home","title":"JMTools.current_misr_prdct_version","text":"misr_prdct_version = current_misr_prdct_version(misr_prdct)\n\nPurpose:\n\nReturn the current version label for the specified MISR product acronym.\n\nRequired positional argument(s):\n\nmisr_prdct::AbstractString: The MISR product acronym name.\n\nOptional keyword(s): N/A.\n\nReturned value(s):\n\nmisr_prdct_version::AbstractString: The current version label for the specified MISR product acronym.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia function: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia function: Version 0.1.0 (2023-05-15).\n\nNote(s):\n\nThe version identifiers defined below may need to be updated when new products are generated at NASA ASDC.\n\nExample(s):\n\njulia> using JMTools\n\njulia> misr_prdct_version = current_misr_prdct_version(\"L2AERO\")\n\"F13_0023\"\n\njulia> misr_prdct_version = current_misr_prdct_version(\"ABcd\")\nERROR: current_misr_prdct_version: Unrecognized MISR product.\n\n\n\n\n\n","category":"function"},{"location":"#JMTools.is_valid_misr_block","page":"Home","title":"JMTools.is_valid_misr_block","text":"bool, misr_block_string = is_valid_misr_block(misr_block)\n\nPurpose:\n\nDetermine whether the specified misr_block is a valid MISR Block number, and return the string version of the MISR Path number prepended with the letter \"B\".\n\nRequired positional argument(s):\n\nmisr_block::Integer: The MISR Block number.\n\nOptional keyword(s): N/A.\n\nReturned value(s):\n\nbool::Bool: Whether misr_block is valid or not.\nmisr_block_string::AbstractString: The string version of the MISR Block number.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia function: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia function: Version 0.1.0 (2023-05-15).\n\nNote(s): N/A.\n\nExample(s):\n\njulia> using JMTools\n\njulia> bool, misr_block_string = is_valid_misr_block(110)\n(true, \"B110\")\n\njulia> bool, misr_block_string = is_valid_misr_block(190)\n(false, \"\")\n\n\n\n\n\n","category":"function"},{"location":"#JMTools.is_valid_misr_camera","page":"Home","title":"JMTools.is_valid_misr_camera","text":"bool = is_valid_misr_camera(misr_camera)\n\nPurpose:\n\nDetermine whether the specified misr_camera is a valid MISR camera name.\n\nRequired positional argument(s):\n\nmisr_camera::AbstractString: The MISR camera name.\n\nOptional keyword(s): N/A.\n\nReturned value(s):\n\nbool::Bool: Whether misr_camera is valid or not.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia function: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia function: Version 0.1.0 (2023-05-15).\n\nNote(s):\n\nThe input positional argument misr_camera can be specified as \"*\" to refer to all 9 camer names.\n\nExample(s):\n\njulia> using JMTools\n\njulia> bool = is_valid_misr_camera(\"AA\")\ntrue\n\njulia> bool = is_valid_misr_camera(\"df\")\nfalse\n\njulia> bool = is_valid_misr_camera(\"*\")\ntrue\n\n\n\n\n\n","category":"function"},{"location":"#JMTools.is_valid_misr_orbit","page":"Home","title":"JMTools.is_valid_misr_orbit","text":"bool, misr_orbit_string = is_valid_misr_orbit(misr_orbit)\n\nPurpose:\n\nDetermine whether the specified misr_orbit is a valid MISR Orbit number, and return the string version of the MISR Path number prepended with the letter \"O\".\n\nRequired positional argument(s):\n\nmisr_orbit::Integer: The MISR Orbit number.\n\nOptional keyword(s): N/A.\n\nReturned value(s):\n\nbool::Bool: Whether misr_orbit is valid or not.\nmisr_orbit_string::AbstractString: The string version of the MISR Orbit number.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia function: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia function: Version 0.1.0 (2023-05-15).\n\nNote(s): N/A.\n\nExample(s):\n\njulia> using JMTools\n\njulia> bool, misr_orbit_string = is_valid_misr_orbit(68050)\n(true, \"O068050\")\n\njulia> bool, misr_orbit_string = is_valid_misr_orbit(994)\n(false, \"\")\n\n\n\n\n\n","category":"function"},{"location":"#JMTools.is_valid_misr_path","page":"Home","title":"JMTools.is_valid_misr_path","text":"bool, misr_path_string = is_valid_misr_path(misr_path)\n\nPurpose:\n\nDetermine whether the specified misr_path is a valid MISR Path number, and return the string version of the MISR Path number prepended with the letter \"P\".\n\nRequired positional argument(s):\n\nmisr_path::Integer: The MISR path number.\n\nOptional keyword(s): N/A.\n\nReturned value(s):\n\nbool::Bool: Whether misr_path is valid or not.\nmisr_path_string::AbstractString: The string version of the MISR Path number.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia function: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia function: Version 0.1.0 (2023-05-15).\n\nNote(s): N/A.\n\nExample(s):\n\njulia> using JMTools\n\njulia> bool, misr_path_string = is_valid_misr_path(168)\n(true, \"P168\")\n\njulia> bool, misr_path_string = is_valid_misr_path(0)\n(false, \"\")\n\n\n\n\n\n","category":"function"},{"location":"#JMTools.is_valid_misr_prdct","page":"Home","title":"JMTools.is_valid_misr_prdct","text":"bool, prdct_name, prdct_full_name, prdct_esdt = is_valid_misr_prdct(misr_prdct)\n\nPurpose:\n\nDetermine whether the specified misr_prdct is a valid MISR product acronym, and return the product label used in filenames, the full MISR product name, and the MISR product Earth Science Data Type (ESDT) useful to acquire data files on the NASA ASDC Data Pool.\n\nRequired positional argument(s):\n\nprdct::AbstractString: The MISR product acronym.\n\nOptional keyword(s): N/A.\n\nReturned value(s):\n\nbool::Bool: Whether misr_prdct acronym is valid or not.\nprdct_name::AbstractString: The product label used in filenames.\nprdct_full_name::AbstractString: The full name of the MISR product.\nprdct_esdt::AbstractString: The Earth Science Data Type (ESDT) label of the MISR product.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia function: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia function: Version 0.1.0 (2023-05-15).\n\nNote(s):\n\nThis function currently recognizes only the MISR product acronyms defined below; additional acronyms can be added as needed.\n\nExample(s):\n\njulia> using JMTools\n\njulia> bool, prdct_name, prdct_full_name, prdct_esdt = is_valid_misr_prdct(\"L1RTGM\")\n(true, \"GRP_TERRAIN_GM\", \"Terrain Projected Radiance Global Mode Product\", \"MI1B2E\")\n\njulia> bool, prdct_name, prdct_full_name, prdct_esdt = is_valid_misr_prdct(\"AGP\")\n(true, \"AGP\", \"Ancillary Geographic Product\", \"MIANCAGP\")\n\njulia> bool, prdct_name, prdct_full_name, prdct_esdt = is_valid_misr_prdct(\"agp\")\n(false, \"\", \"\", \"\")\n\n\n\n\n\n","category":"function"},{"location":"#JMTools.is_valid_misr_site","page":"Home","title":"JMTools.is_valid_misr_site","text":"bool, misr_site_label = is_valid_misr_site(misr_site;\n    cap = \"\", sep = \"\", sit = false, strict = false)\n\nPurpose:\n\nDetermine whether the specified misr_site is a valid MISR site name, and return an edited version of that site name, following the instructions provided by the optional input keywords.\n\nRequired positional argument(s):\n\nmisr_site::AbstractString: The MISR site name.\n\nOptional keyword(s):\n\ncap::AbstractString = \"\": The capitalization rule used to generate misr_site_label:\nIf cap == \"\" (default), the output argument misr_site_label is set (unmodified) as the input positional argument misr_site.\nIf cap == \"txt\", the output argument misr_site_label is set in all lower cases.\nIf cap == \"Txt\", the output argument misr_site_label is set in all lower cases but with the first letter of each distinct word in upper case.\nIf cap == \"TXT\", the input positional parameter misr_site is set in all upper cases.\nsep::AbstractString = \"\": The word separator character used to separate words in misr_site_label:\nIf sep == \"\" (default), the output argument misr_site_label is set using the (unmodified) spelling of the input value misr_site.\nIf sep == \" \", the words of the output argument misr_site_label are separated by a blank space.\nIf sep == \"-\", the words of the output argument misr_site_label are separated by a dash character.\nIf sep == \"_\", the words of the output argument misr_site_label are separated by an underscore character.\nsit::Bool = false:\nIf sit == false (default), the output argument misr_site_label is not further modified beyond the rules described above.\nIf sit == true, the output argument misr_site_label is prepended with the identifier site, Site, or SITE capitalized in the same way as indicated by the keyword cap and separated with the character specified in the keyword sep.\nstrict::Bool = false:\nIf strict == false (default), the output argument misr_site_label uses whatever string value is provided by the input keyword misr_site.\nIf strict == true, the input positional parameter misr_site must be one of the recognized MISR Local Mode site names and the output argument misr_site_label will contain the corresponding value. An error condition is thrown otherwise.\n\nReturned value(s):\n\nbool::Bool: Whether misr_site is valid or not.\nmisr_site_label::AbstractString: The desired site label, properly formatted.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia function: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia function: Version 0.1.0 (2023-05-15).\n\nNote(s):\n\nThe list recognized_misr_sites of recognized MISR Local Mode site names contains a subset of the African sites that have been acquired in Local Mode. It can be expanded as needed to include other regions, but those labels should include neither blank spaces nor dash characters.\nIf the input positional argument is not recognized, or if one of the keyword arguments cap or sep is invalid, the returned value bool is set to false and the misr_site_label contains an error message describing the exception condition.\n\nExample(s):\n\njulia> using JMTools\n\njulia> bool, misr_site_label = is_valid_misr_site(\"egypt\")\n(true, \"egypt\")\n\njulia> bool, misr_site_label = is_valid_misr_site(\"egypt\", strict = true)\n(false, \"The input positional argument misr_site is not recognized.\")\n\njulia> bool, misr_site_label = is_valid_misr_site(\"egypt desert\", strict = true)\n(true, \"egypt desert\")\n\njulia> bool, misr_site_label = is_valid_misr_site(\"egypt desert\", cap = \"Txt\", strict = true)\n(true, \"Egypt Desert\")\n\njulia> bool, misr_site_label = is_valid_misr_site(\"egypt desert\", cap = \"TXT\", sit = true, strict = true)\n(true, \"SITE EGYPT DESERT\")\n\njulia> bool, misr_site_label = is_valid_misr_site(\"egypt desert\", cap = \"TXT\", sep = \"_\", strict = true)\n(true, \"EGYPT_DESERT\")\n\njulia> bool, misr_site_label = is_valid_misr_site(\"egypt desert\", cap = \"TXT\", sep = \"_\", sit = true, strict = true)\n(true, \"SITE_EGYPT_DESERT\")\n\njulia> bool, misr_site_label = is_valid_misr_site(\"egypt desert\", cap = \"Text\")\n(false, \"The input keyword cap is invalid.\")\n\njulia> bool, misr_site_label = is_valid_misr_site(\"eGypT Dessert\", sep = \"_\")\n(true, \"eGypT_Dessert\")\n\n\n\n\n\n","category":"function"},{"location":"#JMTools.is_valid_misrhr_prdct","page":"Home","title":"JMTools.is_valid_misrhr_prdct","text":"bool = is_valid_misrhr_prdct(misrhr_prdct)\n\nPurpose:\n\nDetermine whether the specified misrhr_prdct is a valid MISR-HR product acronym.\n\nRequired positional argument(s):\n\nmisrhr_prdct::AbstractString: The MISR-HR product acronym.\n\nOptional keyword(s): N/A.\n\nReturned value(s):\n\nbool::Bool: Whether misrhr_prdct is valid or not.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia function: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJulia function: Version 0.1.0 (2023-05-15).\n\nNote(s):\n\nThis function currently recognizes the MISR-HR product acronyms defined below; additional acronyms can be added as needed.\n\nExample(s):\n\njulia> using JMTools\n\njulia> bool = is_valid_misrhr_prdct(\"TIP\")\ntrue\n\njulia> bool = is_valid_misrhr_prdct(\"l1B3\")\nfalse\n\n\n\n\n\n","category":"function"},{"location":"#JMTools.mk_misr_fname","page":"Home","title":"JMTools.mk_misr_fname","text":"misr_fname = mk_misr_fname(misr_prdct, misr_path;\n    misr_orbit, misr_camera, misr_site, misr_version)\n\nPurpose:\n\nReturn a Vector of name(s) of the MISR data product file(s) corresponding to the specified input arguments.\n\nRequired positional argument(s):\n\nmisr_prdct::AbstractString: The MISR product acronym.\nmisr_path::Integer: The MISR Path number.\n\nOptional keyword(s):\n\nmisr_orbit::Integer = 0: The MISR Orbit number.\nmisr_camera::AbstractString = \"\": The MISR Camera name.\nmisr_site::AbstractString = \"\": The MISR Local Mode site name.\nmisr_version::AbstractString = \"\": The MISR product version identifier.\n\nReturned value(s):\n\nmisr_fname::Vector{AbstractString}: The name(s) of the MISR data file(s) correponding to the input arguments.\n\nLicensing:\n\nMtk C Library: Copyright © 2005 California Institute of Technology,   Caltech license.\nJulia wrapper: Copyright © 2023 Michel M. Verstraete,   MIT license.\n\nVersioning:\n\nMtk C Library: Version 1.5.\nJMtk15 package: Version 0.1.0 (2023-02-15).\nJMTools package: Version 0.1.0 (2023-05-15).\nJulia function: Version 0.1.0 (2023-05-15).\n\nNote(s):\n\nThis function improves on the MISR Toolkit function MtkMakeFilename.c because it (1) requires only the needed input arguments and tests whether they are valid, (2) ignores unnecessary inputs, and (3) throws a meaningful error if a necessary input is missing or invalid.\nThe input keyword arguments are optional, but if they are explicitly mentioned in the call to the function, their values must also be specified: default values are only provided if the keywords are absent in the call. See the first two examples below.\nThis function cannot provide meaningful default values for the input keywords misr_orbit, misr_camera, and misr_site, but does use the most current misr_version label for the specified misr_prdct if that keyword is missing. Conversely, if the input keyword misr_version is specified, this function cannot verify its validity.\nThis function always returns a Vector of file name(s).\n\nExample(s):\n\njulia> using JMTools\n\njulia> misr_fname = mk_misr_fname(\"AGP\", 168)\n\"MISR_AM1_AGP_P168_F01_24.hdf\"\n\njulia> misr_fname = mk_misr_fname(\"AGP\", 168; misr_orbit = 0, misr_camera = \"\", misr_site = \"\", misr_version = \"\")\n\"MISR_AM1_AGP_P168_F01_24_.hdf\"\n\njulia> misr_fname = mk_misr_fname(\"L1GMP\", 168; misr_orbit = 68050)\n\"MISR_AM1_GP_GMP_P168_O068050_F03_0013_.hdf\"\n\njulia> misr_fname = mk_misr_fname(\"L1RCCM\", 168; misr_orbit = 68050, misr_camera = \"CF\")\n\"MISR_AM1_GRP_RCCM_GM_P168_O068050_CF_F04_0025_.hdf\"\n\njulia> misr_orbit = 68050\n68050\n\njulia> misr_camera = \"CF\"\n\"CF\"\n\njulia> misr_fname = mk_misr_fname(\"L1RCCM\", 168; misr_orbit = misr_orbit, misr_camera = misr_camera)\n\"MISR_AM1_GRP_RCCM_GM_P168_O068050_CF_F04_0025.hdf\"\n\njulia> misr_fname = mk_misr_fname(\"L1RTLM\", 168; misr_orbit = 68050, misr_camera = \"*\", misr_site = \"skukuza\")\n\"MISR_AM1_GRP_TERRAIN_LM_P168_O068050_*_SITE_SKUKUZA_F03_0024.hdf\"\n\njulia> misr_fname = mk_misr_fname(\"L1GMP\", 168; misr_orbit = 680500)\nERROR: mk_misr_fname: Invalid MISR Orbit number: must be in [995, 200000].\n\njulia> misr_fname = mk_misr_fname(\"L1RCCM\", 168; misr_orbit = 68050)\nERROR: mk_misr_fname: Missing MISR Camera name.\n\n\n\n\n\n","category":"function"}]
}
